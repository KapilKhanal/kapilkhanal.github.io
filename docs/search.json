[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "What’s New & Updated",
    "section": "",
    "text": "Order By\n      Default\n      \n        Title\n      \n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Author\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nDerivatives are Cheap and Expensive\n\n\nThe Real Cost of Gradients in Complex Systems Optimization\n\n\n\noptimization\n\nsensitivity analysis\n\nresearch\n\n\n\n\n\n\n\n\n\nJun 23, 2025\n\n\nKapil Khanal\n\n\n\n\n\n\n\n\n\n\n\n\nMarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis\n\n\nA Julia Package for Wave-Structure Interactions\n\n\n\nsoftware\n\nresearch\n\nJulia\n\nhydrodynamics\n\noptimization\n\n\n\n\n\n\n\n\n\nJun 22, 2025\n\n\nKapil Khanal\n\n\n\n\n\n\n\n\n\n\n\n\nCoupled Multidisciplinary Multiobjective Systems: Searching for Similarly Performing System Designs\n\n\nExtending the Isoperformance Method for Feasibility in Coupled Multidisciplinary Systems\n\n\n\nconference\n\nMDO\n\noptimization\n\nresearch\n\n\n\n\n\n\n\n\n\nApr 22, 2025\n\n\nKapil Khanal\n\n\n\n\n\n\n\n\n\n\n\n\nEnhancing the Boundary Element Method with Scientific Machine Learning\n\n\nA Hybrid Approach for Solving Diffraction-Radiation Problems\n\n\n\nresearch\n\nmachine learning\n\nhydrodynamics\n\nJulia\n\n\n\n\n\n\n\n\n\nJul 30, 2024\n\n\nKapil Khanal\n\n\n\n\n\n\n\n\n\n\n\n\nDifferentiable Wave-to-Wire Model for Wave Energy Converter Optimization\n\n\nSubmission to the ASME 2025 IDETC/CIE Conference\n\n\n\nconference\n\nresearch\n\noptimization\n\n\n\n\n\n\n\n\n\nJul 26, 2024\n\n\nKapil Khanal\n\n\n\n\n\n\n\n\n\n\n\n\nGradient-Based Optimization for Large Systems\n\n\nA Deep Dive into MDO Architectures, Solvers, and Simulators\n\n\n\nMDO\n\noptimization\n\nresearch\n\n\n\n\n\n\n\n\n\nJul 26, 2024\n\n\nKapil Khanal\n\n\n\n\n\n\n\n\n\n\n\n\nA Differentiable Framework for Multidisciplinary Design Optimization of Novel Offshore Systems\n\n\nMy PhD Research Proposal\n\n\n\nresearch\n\noptimization\n\nhydrodynamics\n\nthesis\n\n\n\nDeveloping a differentiable boundary element method solver for hydrodynamic shape optimization of offshore structures using automatic differentiation and adjoint methods\n\n\n\n\n\nJan 15, 2024\n\n\nKapil Khanal\n\n\n\n\n\n\n\n\n\n\n\n\neVTOL Integration in Emergency Medical Services: A System Architecture Approach\n\n\nDesigning Affordable, High-Performance, and Equitable Air Ambulance Systems\n\n\n\nsystem architecture\n\neVTOL\n\nsystems engineering\n\nurban mobility\n\nresearch\n\n\n\n\n\n\n\n\n\nDec 19, 2023\n\n\nKapil Khanal\n\n\n\n\n\n\n\n\n\n\n\n\nGiving Passes Due Credit: A Data-Driven Framework to Calculate Expected Goals Per Pass (xG/pass)\n\n\n\n\n\n\ndata science\n\nsports analytics\n\nsoccer\n\nresearch\n\n\n\n\n\n\n\n\n\nFeb 1, 2020\n\n\nKapil Khanal\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "software.html",
    "href": "software.html",
    "title": "Software & Projects",
    "section": "",
    "text": "This page highlights the software projects and computational tools I have developed and contributed to. These projects reflect my interest in creating robust, scalable, and efficient solutions for complex engineering and scientific problems.\nMore details and project listings will be added here soon.\n\n\nFeatured Projects\n\n\nMarineHydro.jl\nA Boundary Element Method (BEM) solver written in Julia, designed for hydrodynamic analysis within a fully differentiable programming paradigm. It leverages automatic differentiation for efficient gradient computation.\n\n\nMDO Framework for WECs\nAn open-source framework built on OpenMDAO for the Multidisciplinary Design Optimization of Wave Energy Converters (WECs). This project integrates hydrodynamic, structural, and control system models.\n\n\nopenFlash\nAn open-source framework built to simulate the hydrodynamics of wave energy converters using matched eigenfunction expansion methods."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kapil Khanal",
    "section": "",
    "text": "Differentiable Programming to Engineer Complex Systems.\n\n\n\n\n\n\n\n\nI am a doctoral candidate at Cornell University, specializing in systems design, engineering, and optimization. My work focuses on leveraging modeling, optimization, and computational techniques to advance sustainable technologies. As a member of the Symbiotic Engineering and Analysis (SEA) Lab, I collaborate on modeling and optimizing large scale renewable energy systems.\nWith a Master’s degree in Systems Engineering and ongoing PhD work, I am to bridge theory and applications for large-scale systems. I did my undergraduate in Mathematics and Data Science from Winona State University, Minnesota.\n\n\n\n\n\n\n💼 Bridging Research and Industry\n\n\n\nUpon completing my PhD, I am seeking full-time industry roles where I can apply my expertise in gradient-based optimization and scientific machine learning to solve challenging real-world problems.\n\nView My CV   Connect on LinkedIn   Explore My GitHub"
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "Kapil Khanal",
    "section": "",
    "text": "I am a doctoral candidate at Cornell University, specializing in systems design, engineering, and optimization. My work focuses on leveraging modeling, optimization, and computational techniques to advance sustainable technologies. As a member of the Symbiotic Engineering and Analysis (SEA) Lab, I collaborate on modeling and optimizing large scale renewable energy systems.\nWith a Master’s degree in Systems Engineering and ongoing PhD work, I am to bridge theory and applications for large-scale systems. I did my undergraduate in Mathematics and Data Science from Winona State University, Minnesota.\n\n\n\n\n\n\n💼 Bridging Research and Industry\n\n\n\nUpon completing my PhD, I am seeking full-time industry roles where I can apply my expertise in gradient-based optimization and scientific machine learning to solve challenging real-world problems.\n\nView My CV   Connect on LinkedIn   Explore My GitHub"
  },
  {
    "objectID": "index.html#research-focus",
    "href": "index.html#research-focus",
    "title": "Kapil Khanal",
    "section": "Research Focus",
    "text": "Research Focus\nMy research architects the next generation of complex engineered systems by fusing advanced computational methods. I am interested in Multidisciplinary Design Optimization (MDO) and Scientific Machine Learning this involves utilizing ideas from Differentiable methods (neural networks, adjoint methods, automatic differentiation, etc.) and other physical simulations. Through these powerful, gradient-based techniques, I tackle critical design challenges in domains ranging from renewable energy systems to aerospace structures. I am also interested in Verification and Validation of large systems utilizing techniques from Uncertainty Quantification (UQ)."
  },
  {
    "objectID": "index.html#recent-posts",
    "href": "index.html#recent-posts",
    "title": "Kapil Khanal",
    "section": "Recent Posts",
    "text": "Recent Posts\nCheck out the latest  Papers ,  News ,  Events , and  More »\n\n\n\n\n\n\n\n\nDerivatives are Cheap and Expensive\n\n\nThe Real Cost of Gradients in Complex Systems Optimization\n\n\n\nJun 23, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nMarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis\n\n\nA Julia Package for Wave-Structure Interactions\n\n\n\nJun 22, 2025\n\n\n\n\n\n\n\n\n\n\n\nCoupled Multidisciplinary Multiobjective Systems: Searching for Similarly Performing System Designs\n\n\nExtending the Isoperformance Method for Feasibility in Coupled Multidisciplinary Systems\n\n\n\nApr 22, 2025\n\n\n\n\n\n\nNo matching items\n\n\nAll Posts »"
  },
  {
    "objectID": "posts/idetc-2025-submission/index.html",
    "href": "posts/idetc-2025-submission/index.html",
    "title": "Differentiable Wave-to-Wire Model for Wave Energy Converter Optimization",
    "section": "",
    "text": "I recently submitted a paper to the ASME 2025 International Design Engineering Technical Conferences & Computers and Information in Engineering Conference (IDETC/CIE), to be held in Anahiem, California, from August 17-20, 2025.\nBelow is the abstract for the submission.\n\n\nAbstract\nWave energy conversion requires optimal design and control strategies to maximize energy extraction. Optimization approaches such as control co-design optimize plant design and the control strategies together. Several existing approaches use heuristic methods that do not scale well with high-dimensional design spaces. A gradient-based approach scales better than the heuristic method, for which the integrated model should be able to provide not just the output but its sensitivity with respect to the inputs. Currently, these different numerical solvers are used in isolation, thus making heuristic optimizers a natural choice.\nThis study develops a differentiable model integrating boundary element methods (BEM) for hydrodynamic modeling with pseudo-spectral optimal control techniques to optimize power take-off (PTO) forces under dynamic constraints for maximizing electrical power per volume of a point absorber wave energy converter (WEC). This model is useful for the large-scale gradient-based optimization of the electrical power.\nDiscussion and derivation of the semi-analytic adjoint for the hydrodynamics solver, non-linear parametric sensitivity for the trajectory optimization, and the calculation of the coupled derivative using unified derivative equations is presented. A nested formulation of the control co-design approach within a multidisciplinary design optimization architecture is created for the differentiable wave-to-wire model. Preliminary numerical experiment and verification of the sensitivities is conducted for the differentiable wave-to-wire model for a heaving point absorber WEC."
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "Quarto Academic\nSchool\nCollege\nUniversity\nAddress:\nPhone:\nE-mail:"
  },
  {
    "objectID": "teaching.html",
    "href": "teaching.html",
    "title": "Teaching",
    "section": "",
    "text": "Image: openmdao\n\n\nCourse: Multidisciplinary Design Optimization\nInstitution: Cornell University\nRole: Teaching Assistant\nWhen Offered: Fall Semester\nPrerequisites: Undergraduate linear algebra and knowledge of MATLAB, Python, or R\nCourse Overview: This course presents a rigorous, quantitative multidisciplinary design methodology that incorporates the creative side of the design process. Through a topic of your choice, students learn how to use multidisciplinary design optimization (MDO) to create advanced and complex engineering systems that must be competitive in performance and life-cycle value.\nKey Focus Areas: -Multidisciplinary character of engineering systems -Design of complex systems\n-Tools for optimization\nCourse Structure: Students work in small teams on a term project to apply MDO principles to design and optimize an engineering system of their choice.\n\n\n\n\nStudents who successfully complete this course will be able to:\n\nSystem Decomposition: Subdivide a complex system into smaller disciplinary models, manage their interfaces and reintegrate them into an overall system model.\nAlgorithm Selection: Identify the most suitable optimization algorithm between gradient-based numerical optimization algorithms (i.e., sequential quadratic programming (SQP)) and various modern heuristic optimization techniques (i.e., simulated annealing (SA) or genetic algorithms (GA)) for their design problem and use it to find the optimal design for a single objective of their choice.\nCritical Analysis: Critically evaluate and interpret analysis and optimization results, including sensitivity analysis and exploration of performance, cost and risk tradeoffs.\nMulti-Objective Optimization: Utilize basic concepts of multi-objective optimization, including the conditions for optimality and Pareto front computation techniques, to optimize their design with respect to two objectives of their choice.\nTeam Project: Work as a team to formulate a realistic engineering design problem, optimize the design for a single objective and multiple competing objectives, and present the results in a final oral presentation and written report.\n\n\n\n\nThis course is fundamentally different from most traditional university optimization courses which focus mainly on the mathematics and algorithms for search. The focus is equally strong on all three aspects of the problem:\n\nMultidisciplinary Integration: Understanding how different disciplines (structures, aerodynamics, controls, optics, costing, manufacturing, environmental science, marketing, etc.) must be tightly coupled during conceptual and preliminary design of complex new systems and products.\nSystem Design: Developing the ability to design complex engineering systems that are competitive in performance and life-cycle value.\nOptimization Tools: Mastering both gradient-based and heuristic optimization techniques for real-world engineering applications.\n\n\n\n\n\nProgramming: MATLAB, Python, or R for implementation\nOptimization Algorithms:\n\nGradient-based methods (Sequential Quadratic Programming)\nHeuristic methods (Simulated Annealing, Genetic Algorithms)\n\nMulti-objective Optimization: Pareto front computation and analysis\nSensitivity Analysis: Understanding design parameter impacts\nSystem Integration: Managing multidisciplinary model couplings\n\n\nThis course provides students with practical experience in applying MDO principles to real engineering problems, preparing them for careers in advanced engineering design and optimization."
  },
  {
    "objectID": "teaching.html#multidisciplinary-design-optimization-mdo",
    "href": "teaching.html#multidisciplinary-design-optimization-mdo",
    "title": "Teaching",
    "section": "",
    "text": "Image: openmdao\n\n\nCourse: Multidisciplinary Design Optimization\nInstitution: Cornell University\nRole: Teaching Assistant\nWhen Offered: Fall Semester\nPrerequisites: Undergraduate linear algebra and knowledge of MATLAB, Python, or R\nCourse Overview: This course presents a rigorous, quantitative multidisciplinary design methodology that incorporates the creative side of the design process. Through a topic of your choice, students learn how to use multidisciplinary design optimization (MDO) to create advanced and complex engineering systems that must be competitive in performance and life-cycle value.\nKey Focus Areas: -Multidisciplinary character of engineering systems -Design of complex systems\n-Tools for optimization\nCourse Structure: Students work in small teams on a term project to apply MDO principles to design and optimize an engineering system of their choice.\n\n\n\n\nStudents who successfully complete this course will be able to:\n\nSystem Decomposition: Subdivide a complex system into smaller disciplinary models, manage their interfaces and reintegrate them into an overall system model.\nAlgorithm Selection: Identify the most suitable optimization algorithm between gradient-based numerical optimization algorithms (i.e., sequential quadratic programming (SQP)) and various modern heuristic optimization techniques (i.e., simulated annealing (SA) or genetic algorithms (GA)) for their design problem and use it to find the optimal design for a single objective of their choice.\nCritical Analysis: Critically evaluate and interpret analysis and optimization results, including sensitivity analysis and exploration of performance, cost and risk tradeoffs.\nMulti-Objective Optimization: Utilize basic concepts of multi-objective optimization, including the conditions for optimality and Pareto front computation techniques, to optimize their design with respect to two objectives of their choice.\nTeam Project: Work as a team to formulate a realistic engineering design problem, optimize the design for a single objective and multiple competing objectives, and present the results in a final oral presentation and written report.\n\n\n\n\nThis course is fundamentally different from most traditional university optimization courses which focus mainly on the mathematics and algorithms for search. The focus is equally strong on all three aspects of the problem:\n\nMultidisciplinary Integration: Understanding how different disciplines (structures, aerodynamics, controls, optics, costing, manufacturing, environmental science, marketing, etc.) must be tightly coupled during conceptual and preliminary design of complex new systems and products.\nSystem Design: Developing the ability to design complex engineering systems that are competitive in performance and life-cycle value.\nOptimization Tools: Mastering both gradient-based and heuristic optimization techniques for real-world engineering applications.\n\n\n\n\n\nProgramming: MATLAB, Python, or R for implementation\nOptimization Algorithms:\n\nGradient-based methods (Sequential Quadratic Programming)\nHeuristic methods (Simulated Annealing, Genetic Algorithms)\n\nMulti-objective Optimization: Pareto front computation and analysis\nSensitivity Analysis: Understanding design parameter impacts\nSystem Integration: Managing multidisciplinary model couplings\n\n\nThis course provides students with practical experience in applying MDO principles to real engineering problems, preparing them for careers in advanced engineering design and optimization."
  },
  {
    "objectID": "posts/differentiable-hydrodynamics-framework/index.html",
    "href": "posts/differentiable-hydrodynamics-framework/index.html",
    "title": "A Differentiable Framework for Multidisciplinary Design Optimization of Novel Offshore Systems",
    "section": "",
    "text": "Optimizing the levelized cost of electricity for floating offshore wind turbines (FOWTs) and wave energy parks involves analyzing multiple coupled subsystems including geometry, aerodynamics, and hydrodynamics. In complex engineered systems, the solution of governing equations in one subsystem changes the input for another subsystem. As the saying goes in engineering: “everything influences everything else” (Sobieszczanski-Sobieski and Haftka 1993). This creates design tradeoffs between several subsystems, necessitating an integrated multidisciplinary analysis approach.\nMultidisciplinary Design Optimization (MDO) is a field of engineering that focuses on using numerical optimization and solvers for designing systems involving multiple coupled disciplines or subsystems (Martins and Lambe 2013). Research has shown that sequential optimization of coupled subsystems usually results in sub-optimal designs, while an MDO approach leads to system-optimal solutions (Sobieszczanski-Sobieski and Haftka 1993)."
  },
  {
    "objectID": "posts/differentiable-hydrodynamics-framework/index.html#introduction",
    "href": "posts/differentiable-hydrodynamics-framework/index.html#introduction",
    "title": "A Differentiable Framework for Multidisciplinary Design Optimization of Novel Offshore Systems",
    "section": "",
    "text": "Optimizing the levelized cost of electricity for floating offshore wind turbines (FOWTs) and wave energy parks involves analyzing multiple coupled subsystems including geometry, aerodynamics, and hydrodynamics. In complex engineered systems, the solution of governing equations in one subsystem changes the input for another subsystem. As the saying goes in engineering: “everything influences everything else” (Sobieszczanski-Sobieski and Haftka 1993). This creates design tradeoffs between several subsystems, necessitating an integrated multidisciplinary analysis approach.\nMultidisciplinary Design Optimization (MDO) is a field of engineering that focuses on using numerical optimization and solvers for designing systems involving multiple coupled disciplines or subsystems (Martins and Lambe 2013). Research has shown that sequential optimization of coupled subsystems usually results in sub-optimal designs, while an MDO approach leads to system-optimal solutions (Sobieszczanski-Sobieski and Haftka 1993)."
  },
  {
    "objectID": "posts/differentiable-hydrodynamics-framework/index.html#motivation-for-a-differentiable-framework",
    "href": "posts/differentiable-hydrodynamics-framework/index.html#motivation-for-a-differentiable-framework",
    "title": "A Differentiable Framework for Multidisciplinary Design Optimization of Novel Offshore Systems",
    "section": "Motivation for a Differentiable Framework",
    "text": "Motivation for a Differentiable Framework\nOffshore and marine energy systems are inherently complex coupled systems. Currently, no integrated framework exists for offshore structures that supports both hydrodynamic simulation and shape optimization. This represents a significant bottleneck for design studies and optimization efforts. The adoption of MDO-based approaches should be encouraged to increase accessibility for further research (Musial et al. 2020).\nIn multidisciplinary design optimization, changes in one subsystem propagate across other subsystems. For example, a change in the mean position of a floating body alters the waterline and waterplane area, requiring recalculation of hydrodynamic coefficients. Similarly, research on novel multipurpose platforms (Perez-Collazo, Greaves, and Iglesias 2015) would benefit from such a framework.\nThe framework I’m developing is intended to serve as: - A tool for early design studies in the conceptual phase - A plugin for other MDO applications where hydrodynamics analysis is coupled"
  },
  {
    "objectID": "posts/differentiable-hydrodynamics-framework/index.html#multidisciplinary-design-optimization",
    "href": "posts/differentiable-hydrodynamics-framework/index.html#multidisciplinary-design-optimization",
    "title": "A Differentiable Framework for Multidisciplinary Design Optimization of Novel Offshore Systems",
    "section": "Multidisciplinary Design Optimization",
    "text": "Multidisciplinary Design Optimization\n\nHydrodynamic Shape Optimization\nMDO of offshore structures involves shape perturbation and optimization. Different underwater shapes of floating bodies respond differently to incoming ocean waves, making shape optimization crucial for offshore platform design.\nOffshore structures like spar buoys (vertical cylindrical structures) can be reasonably modeled using analytical approximations (Haghi, Sabbagh-Yazdi, and Ghalandari 2014; Morison, Johnson, and Schaaf 1950). However, these analytical approaches are not feasible for non-standard geometries—those obtained after perturbing a base shape, usually described using splines. Efficient shape parameterization and numerical solvers explore the design space much better (Martins and Lambe 2013). In MDO, shapes are typically perturbed to be compatible with other subsystems, with B-splines (CAD geometry) being preferred (Samareh 2001).\nThe response motion of offshore structures is calculated using hydrodynamic coefficients such as added mass and damping. These coefficients characterize the geometry of floating structures. A transfer function called the Response Amplitude Operator (RAO) linearly relates sea motion to floating body motion."
  },
  {
    "objectID": "posts/differentiable-hydrodynamics-framework/index.html#boundary-element-method",
    "href": "posts/differentiable-hydrodynamics-framework/index.html#boundary-element-method",
    "title": "A Differentiable Framework for Multidisciplinary Design Optimization of Novel Offshore Systems",
    "section": "Boundary Element Method",
    "text": "Boundary Element Method\nBoundary Element Methods (BEM) are used to calculate hydrodynamic coefficients, relying on linear potential flow theory where the exact Green’s function and its derivative are known (Babarit and Delhommeau 2011). BEM-based PDE solvers (Babarit 2015) are typically accurate for most geometries and can be coupled for shape optimization within a design framework. Depending on system requirements, we may want to minimize or maximize body response to waves—minimizing motion for wind turbines while maximizing motion for wave energy converters.\nHydrodynamics of floating bodies is typically modeled using linear potential flow theory. Since the domain is unbounded, boundary element methods are used, requiring only boundary discretization—the surface geometry is meshed with quadrilateral panels.\nFor each frequency of ocean waves the structure encounters, diffraction and radiation problems are solved to calculate hydrodynamic coefficients. The solution of velocity potential and radiation/diffraction forces is computed in the frequency domain.\nComputational cost increases with geometry discretization and the number of wave frequencies and headings. Typically, numerical complexity of BEM codes is proportional to \\(O(N^2)\\) or \\(O(N^3)\\) with \\(N\\) as the number of mesh panels. The Green function is computed \\(O(N^2)\\) times to set up the linear system, which is solved either by iterative methods with \\(O(N^2)\\) complexity or Gauss elimination with \\(O(N^3)\\) complexity (Babarit and Delhommeau 2011).\nThis limits integration within optimization loops, especially for large-scale optimization based on heuristic methods. The solution is to minimize function evaluations in optimization. Gradient-based optimization explores design space more efficiently (fewer evaluations) to reach locally optimal points\n\nDifferentiable Hydrodynamics\nCoupling numerical solvers within optimization is computationally costly. Shape optimization with many design variables requires an efficient way to calculate both the response and its gradient. Researchers often rely on reduced-order models to approximate hydrodynamic response and heuristic methods for optimization. However, heuristic methods don’t scale well for large-scale optimization, and reduced-order models lack the accuracy of full simulations.\nGradient-based optimization is preferred for large-scale optimization with many design variables and costly function evaluations. Coupling numerical solvers in gradient-based optimization requires gradients of solver output with respect to all inputs. While this has been implemented for CFD (He et al. 2020), no implementation of differentiable hydrodynamics (differentiable BEM) exists.\nAmong various gradient calculation methods, adjoint-based methods are accurate and efficient for inverse design problems. Adjoint methods are widely used in optimal control and aerodynamic shape optimization (Jameson 1988) as well as design optimization (Giles and Pierce 2000), but haven’t been applied to BEM-based hydrodynamics shape optimization.\n\n\nCoupled Derivatives\nFor multidisciplinary design optimization, Modular Analysis and Unified Derivatives (MAUD) architecture couples derivatives from several subsystems. MAUD formulates the multidisciplinary model as a nonlinear system of equations, leading to a linear equation that unifies all derivative computation methods (Hwang and Martins 2018). Each subsystem can provide numerical or analytical gradients.\nOpenMDAO (Gray et al. 2019), a tool developed by NASA, implements this framework. I plan to integrate newly developed BEM adjoints into this framework. Currently, I integrate BEM in OpenMDAO using numerical derivatives approximated through finite differences (Khanal and Haji 2023). Since this scales linearly with the number of design variables and accuracy deteriorates for nonlinear problems, it’s not appropriate for multidisciplinary analysis and optimization. My thesis aims to solve this problem.\n\nUnderstanding Adjoint Methods\nAdjoint methods provide an elegant way to compute gradients of objective functions with respect to many design variables at a computational cost that is essentially independent of the number of design variables. This is particularly valuable for shape optimization problems where we may have hundreds or thousands of design variables.\nThe key insight of adjoint methods is that instead of computing \\(\\frac{\\partial x}{\\partial \\theta}\\) directly (which would require solving the system for each design variable), we solve a single adjoint equation to obtain the sensitivity of the objective function.\nFor our BEM optimization problem:\n\\[\\begin{aligned}\n\\min_{\\theta,x} \\quad & J(S(\\theta), x(\\theta); \\theta ) \\\\\n\\textrm{s.t.} \\quad R(\\theta)=  & K(\\theta)\\times x(\\theta) - B(\\theta) = 0 \\\\\n\\end{aligned}\\]\nThe total derivative of the objective function with respect to design variables is:\n\\[\\frac{dJ}{d\\theta} = \\frac{\\partial J}{\\partial \\theta} + \\frac{\\partial J}{\\partial x}\\frac{\\partial x}{\\partial \\theta}\\]\nUsing the constraint equation \\(R(\\theta) = K(\\theta)x(\\theta) - B(\\theta) = 0\\), we can derive:\n\\[\\frac{\\partial R}{\\partial \\theta} = \\frac{\\partial K}{\\partial \\theta}x + K\\frac{\\partial x}{\\partial \\theta} - \\frac{\\partial B}{\\partial \\theta} = 0\\]\nSolving for \\(\\frac{\\partial x}{\\partial \\theta}\\):\n\\[\\frac{\\partial x}{\\partial \\theta} = K^{-1}\\left(\\frac{\\partial B}{\\partial \\theta} - \\frac{\\partial K}{\\partial \\theta}x\\right)\\]\nSubstituting back into the total derivative:\n\\[\\frac{dJ}{d\\theta} = \\frac{\\partial J}{\\partial \\theta} + \\frac{\\partial J}{\\partial x}K^{-1}\\left(\\frac{\\partial B}{\\partial \\theta} - \\frac{\\partial K}{\\partial \\theta}x\\right)\\]\nThe adjoint variable \\(\\lambda\\) is defined as the solution to:\n\\[K^T\\lambda = \\left(\\frac{\\partial J}{\\partial x}\\right)^T\\]\nThis leads to the elegant expression:\n\\[\\frac{dJ}{d\\theta} = \\frac{\\partial J}{\\partial \\theta} + \\lambda^T\\left(\\frac{\\partial B}{\\partial \\theta} - \\frac{\\partial K}{\\partial \\theta}x\\right)\\]\nComputational advantage: Instead of solving \\(N\\) forward problems (one for each design variable), we solve: 1. One forward problem: \\(Kx = B\\) 2. One adjoint problem: \\(K^T\\lambda = \\left(\\frac{\\partial J}{\\partial x}\\right)^T\\)\nThis gives us gradients with respect to all design variables at the cost of just two linear system solves, regardless of the number of design variables.\n\n\nAutomatic Differentiation in Practice\nAutomatic Differentiation (AD) is a technique that automatically computes derivatives of functions implemented in computer code. Unlike symbolic differentiation (which manipulates mathematical expressions) or finite differences (which approximates derivatives), AD computes exact derivatives by applying the chain rule systematically through the computational graph.\nTwo main modes of AD:\n\nForward Mode AD: Computes directional derivatives by propagating derivatives forward through the computation. For a function \\(f: \\mathbb{R}^n \\rightarrow \\mathbb{R}^m\\), forward mode computes \\(J \\cdot v\\) where \\(J\\) is the Jacobian and \\(v\\) is a direction vector.\nReverse Mode AD: Computes gradients by propagating adjoints backward through the computation. For a scalar function \\(f: \\mathbb{R}^n \\rightarrow \\mathbb{R}\\), reverse mode computes \\(\\nabla f\\) at the cost of approximately 2-4 function evaluations, regardless of \\(n\\).\n\nFor our BEM solver, reverse mode AD is particularly attractive because: - We typically have many design variables (shape parameters) but few objectives - The computational cost is independent of the number of design variables - It naturally computes the adjoint variables needed for our optimization\nImplementation considerations:\n\nLanguage choice: Julia and JAX are excellent choices because they:\n\nSupport automatic differentiation natively\nProvide high-performance numerical computing\nEnable just-in-time compilation for efficiency\nOffer parallel computing capabilities\n\nComputational graph: The BEM solver must be implemented in a way that maintains a differentiable computational graph:\n\nAll operations must be differentiable\nControl flow must be handled carefully\nLinear solvers must be differentiable (or replaced with differentiable alternatives)\n\nMemory considerations: Reverse mode AD requires storing intermediate values for the backward pass, which can be memory-intensive for large problems.\n\n\n\nDiscrete vs. Continuous Adjoint\nContinuous adjoint methods derive adjoint equations from the continuous governing equations (PDEs) before discretization. This approach: - Provides analytical expressions for adjoint equations - May be more efficient for certain problems - Requires careful treatment of boundary conditions - Is problem-specific and requires manual derivation\nDiscrete adjoint methods work with the discretized equations and use automatic differentiation to compute the required derivatives. This approach: - Is more general and applicable to many problems - Automatically handles complex discretization schemes - Requires less manual derivation - Can be less efficient but is more robust\nFor our BEM solver, discrete adjoint with automatic differentiation is preferred because: - It handles the complex Green’s function evaluations automatically - It works with any objective function without manual derivation - It integrates seamlessly with existing optimization frameworks - It provides exact gradients (up to numerical precision)\n\n\nChallenges and Solutions\nChallenge 1: Dense Linear Systems BEM methods solve dense linear systems, which are computationally expensive. Solutions include: - Using iterative solvers with preconditioning - Implementing matrix-free methods where possible - Leveraging parallel computing for large problems\nChallenge 2: Complex-valued Computations Hydrodynamic problems involve complex numbers (frequency domain analysis). AD frameworks must handle complex differentiation correctly: - Using Wirtinger calculus for complex derivatives - Ensuring proper handling of complex conjugates - Maintaining numerical stability\nChallenge 3: Green’s Function Evaluation The free-surface Green’s function is computationally expensive and involves special functions. Solutions include: - Implementing efficient evaluation algorithms - Using approximation methods for early design iterations - Leveraging GPU acceleration where possible\nChallenge 4: Integration with Optimization Frameworks The differentiable BEM solver must integrate with MDO frameworks like OpenMDAO: - Providing consistent interfaces for gradient computation - Handling the coupling between different subsystems - Ensuring numerical stability across the entire optimization"
  },
  {
    "objectID": "posts/differentiable-hydrodynamics-framework/index.html#optimization-problem-statement",
    "href": "posts/differentiable-hydrodynamics-framework/index.html#optimization-problem-statement",
    "title": "A Differentiable Framework for Multidisciplinary Design Optimization of Novel Offshore Systems",
    "section": "Optimization Problem Statement",
    "text": "Optimization Problem Statement\nThe hydrodynamic optimization problem can be expressed in general form as:\n\\[\\begin{aligned}\n\\min_{\\theta,x} \\quad & J(S(\\theta), x(\\theta); \\theta ) \\\\\n\\textrm{s.t.} \\quad R(\\theta)=  & K(\\theta)\\times x(\\theta) - B(\\theta) = 0 \\\\\n\\end{aligned}\\]\nWhere: - \\(x\\) is the state variable vector (e.g., source distribution) - \\(\\theta\\) represents mesh parameters (design variables) - \\((K, S)\\) are influence matrices (complex-valued) from free surface Green’s function evaluation and its derivative - \\(J\\) is the objective function (e.g., Response Amplitude Operator)\nIn this optimization, residuals from dense linear systems are driven to zero iteratively using linear solvers:\n\\[R = K x - B\\]\nWhere \\(K\\) is the square influence matrix between mesh panels (\\(N \\times N\\)), \\(B\\) represents boundary conditions for diffraction and radiation problems, and \\(N\\) is the number of mesh panels. \\(K\\), \\(X\\), and \\(B\\) are explicitly related to mesh parameters \\((\\theta)\\). The objective function thus depends both explicitly and implicitly on mesh parameters \\((\\theta)\\).\nFor multidisciplinary design optimization including hydrodynamic optimization, the number of design variables increases further to account for system objectives and subsystem couplings.\nFor inverse design problems like this, calculating the gradient \\(\\frac{d J}{d\\theta}\\) involves computing \\(\\frac{\\partial B}{\\partial \\theta}\\), \\(\\frac{\\partial K}{\\partial \\theta}\\), \\(\\frac{\\partial x}{\\partial \\theta}\\), and \\(\\frac{\\partial J}{\\partial \\theta}\\)—which is only possible through automatic differentiation of the BEM solver."
  },
  {
    "objectID": "posts/differentiable-hydrodynamics-framework/index.html#my-research-contribution",
    "href": "posts/differentiable-hydrodynamics-framework/index.html#my-research-contribution",
    "title": "A Differentiable Framework for Multidisciplinary Design Optimization of Novel Offshore Systems",
    "section": "My Research Contribution",
    "text": "My Research Contribution\nWhen coupling BEM with other analyses, numerical derivatives such as finite differences can be used (Khanal and Haji 2023). I have already implemented this as the first version of my framework, but it has issues with accuracy and convergence and may not scale well for large numbers of design variables.\nIn contrast, the adjoint method requires only 2 solves of the linear system to obtain accurate gradients with respect to many design variables. A differentiable hydrodynamics solver is required to construct the adjoint equation.\nAdjoint equations to minimize wave resistance of surface ships were derived by Ragab through continuous adjoint formulation (Ragab and Nayfeh 2004). However, this isn’t directly applicable to many offshore structures where different functionals (motions) are optimized. Unlike continuous formulation, discrete adjoint-based derivation using automatic differentiation is applicable to many objectives as long as they’re programmed in a language supporting automatic differentiation (Giles and Pierce 2000).\nMy thesis aims to implement a differentiable multidisciplinary design optimization framework that integrates gradient-based optimization for large-scale offshore systems.\nThe proposed framework will:\n\nImplement a differentiable solver for hydrodynamics analysis\nDerive, implement, and integrate adjoint-based shape optimization for offshore structures\nDemonstrate differentiability and present case studies on optimization of novel offshore systems\n\nCreating a differentiable boundary element method (BEM) solver will enable modern and complex workflows in offshore system design and optimization. Differentiability will allow for novel methods such as adjoint-based multidisciplinary optimization and more accurate data-driven methods such as physics-informed machine learning.\nThese capabilities will significantly reduce the design cycle for early design studies of novel offshore systems."
  },
  {
    "objectID": "posts/differentiable-hydrodynamics-framework/index.html#research-phases",
    "href": "posts/differentiable-hydrodynamics-framework/index.html#research-phases",
    "title": "A Differentiable Framework for Multidisciplinary Design Optimization of Novel Offshore Systems",
    "section": "Research Phases",
    "text": "Research Phases\n\nPhase 1: Discrete Adjoint Implementation\nThe first phase involves deriving and setting up discrete adjoint equations for BEM. We’ll use automatic differentiation to obtain partial sensitivities required in the equation by implementing the BEM method in either Julia or Jax, as they support automatic differentiation in a discretize-then-optimize scheme.\nThese libraries and programming languages support: - Automatic Differentiation (AD) - Parallelism - Just-in-time (JIT) compilation\nGradient calculations need to be performed through the iterative solver employed to solve dense linear systems in BEM methods.\nThis method relies on known exact expressions of Green’s function. Mathematical expressions and numerical methods for free-surface Green’s function of linearized wave-structure problems in deep water and frequency domain are investigated (Xie and Liu 2020). Other methods, such as approximating free-surface Green’s function using deep learning, can also be explored for early design iterations when speed is more important than accuracy.\n\n\nPhase 2: MDO Framework Integration\nThe second phase integrates differentiable BEM into the MDO framework. Extensions could include supporting more accurate physics-informed machine learning (Raissi, Perdikaris, and Karniadakis 2019).\nBEM methods require solving dense linear systems. The re-implementation will use algorithms best suited for dense matrices. A differentiable solver would provide required gradients for optimization and neural network-based approximation. Simulators implemented with automatic differentiation can be used inside machine learning models to construct more accurate reduced-order models (Brunton, Proctor, and Kutz 2020).\n\n\nExpected A-Exam Scope\nI plan to take an A-exam in Spring 2024, presenting the differentiable version of the solver that derives discrete adjoints for the hydrodynamic solver using automatic differentiation in Jax or Julia.\nAn optimization study of simple geometry (such as a compound cylinder) with analytical derivation through eigenfunction expansion will be conducted for gradient verification. Gradients will be compared with finite differences for geometries where analytical gradients are unavailable."
  },
  {
    "objectID": "posts/differentiable-hydrodynamics-framework/index.html#tentative-thesis-chapters",
    "href": "posts/differentiable-hydrodynamics-framework/index.html#tentative-thesis-chapters",
    "title": "A Differentiable Framework for Multidisciplinary Design Optimization of Novel Offshore Systems",
    "section": "Tentative Thesis Chapters",
    "text": "Tentative Thesis Chapters\n\nMultidisciplinary Design Optimization of Offshore Systems - Literature review\nBoundary Element Method for Calculating Hydrodynamic Coefficients\nAdjoint and Automatic Differentiation of BEM Solver\nCase Studies and Applications of a Differentiable Solver"
  },
  {
    "objectID": "posts/differentiable-hydrodynamics-framework/index.html#keywords",
    "href": "posts/differentiable-hydrodynamics-framework/index.html#keywords",
    "title": "A Differentiable Framework for Multidisciplinary Design Optimization of Novel Offshore Systems",
    "section": "Keywords",
    "text": "Keywords\nDifferentiable Hydrodynamics, Multidisciplinary Design Optimization, Automatic Differentiation, Discrete Adjoint Method, Boundary Element Method, Potential Flow, Panel Code\n\nThis research is conducted as part of my PhD in Systems Engineering at Cornell University, under the supervision of Dr. Maha Haji in the Symbiotic Engineering and Analysis Lab."
  },
  {
    "objectID": "posts/gradient-based-optimization/index.html",
    "href": "posts/gradient-based-optimization/index.html",
    "title": "Gradient-Based Optimization for Large Systems",
    "section": "",
    "text": "A computational architecture for Multidisciplinary Design Optimization (MDO) is composed of three primary components: solvers (e.g., Newton), simulators (or emulators, PDE solvers, closed-form expressions), and optimizers (e.g., IPOPT, Genetic Algorithm). The performance and efficiency of the overall system are directly influenced by the selection and interaction of these components.\nSimulators and solvers are required to either compute the performance of the system through some physics (numerical simulation) or resolve non-linear feedback coupling between subsystems (non-linear equation solvers). A system where all the subsystems agree on their input and output (including any shared variables) is necessary for the system to be optimal and feasible. The coordination of the variables can, however, be done in numerous ways that involve solvers and/or optimizers. Many architectures that arise due to these choices are briefly discussed in later sections.\nFor offshore systems, marine hydrodynamics solvers (like the boundary element method) are required. The choice of solvers, however, depends on the strength of the coupling between two subsystems. In this post, a Newton solver is used to converge the feedback coupling when necessary.\n\n\nThe MDO system can be represented as a set:\n\\[F:\\{\\mathcal{O}, \\mathcal{M}, \\mathcal{S}\\}\\]\nwhere \\(\\mathcal{M}\\) is the set of simulators, \\(\\mathcal{O}\\) is the choice of optimizer, and \\(\\mathcal{S}\\) is the set of solvers.\nThe performance \\(\\mathcal{P}(\\mathcal{F})\\) depends on:\n\nThe compatibility of \\(\\mathcal{M}\\) and \\(\\mathcal{S}\\) with \\(\\mathcal{O}\\).\nThe computational efficiency of \\(\\mathcal{F}\\), defined by the time \\(T(\\mathcal{F})\\) and accuracy \\(A(\\mathcal{F})\\).\nThe convergence of the optimization problem.\n\nGradient-based optimizers (\\(\\mathcal{O}_{\\nabla}\\)) achieve superior performance (\\(\\mathcal{P}(\\mathcal{F}_{\\nabla}) &gt; \\mathcal{P}(\\mathcal{F}_{\\neg \\nabla})\\)) when \\(\\mathcal{M}\\) and \\(\\mathcal{S}\\) are differentiable. However, the practical challenges of computing gradients for certain simulators and solvers remain a significant limitation.\n\n\n\nLet \\(\\mathcal{F}\\) represent the multidisciplinary optimization problem, where each problem \\(p \\in \\mathcal{F}\\) is defined by a set of variables (design, shared, target), constraints (including consistency constraints), and objectives (one or many). The optimizer is a function \\(\\mathcal{O}: \\mathcal{F} \\to \\mathcal{R}\\), where \\(\\mathcal{R}\\) is the space of feasible solutions.\nOptimizers commonly used in MDO problems can be broadly categorized into:\n\nGradient-Based Optimizers (\\(\\mathcal{O}_{\\nabla}\\)): These optimizers leverage the gradient \\(\\nabla f\\) of the objective function \\(f\\) to iteratively find a minimum. The preference for gradient-based methods arises from their superior convergence speed when gradients are available and computationally inexpensive. However, obtaining gradients can be challenging:\n\nCertain simulator software \\(S: \\mathcal{X} \\to \\mathcal{Y}\\), where \\(\\mathcal{X}\\) is the input space and \\(\\mathcal{Y}\\) is the output space, may not inherently provide differentiable mappings.\nNumerical approximations such as finite differences (\\(\\nabla f \\approx \\frac{\\Delta f}{\\Delta x}\\)) may introduce errors and computational overhead when differentiating this class of simulators.\n\nGradient-Free Optimizers (\\(\\mathcal{O}_{\\neg \\nabla}\\)): These include evolutionary algorithms and heuristic methods that do not require gradient information. Evolutionary strategies are stochastic and derivative-free. While easier to use and robust for non-differentiable problems (think black-box type problems), they often lack the efficiency of \\(\\mathcal{O}_{\\nabla}\\) for high-dimensional spaces.\n\n\n\n\n\\(\\mathcal{S}\\) is the set of solvers and \\(\\mathcal{M}\\) is the set of simulators needed for the MDO problems. The choices \\(s \\in \\mathcal{S}\\) and \\(m \\in \\mathcal{M}\\) affect the feasibility and convergence of the optimization problem. For instance:\n\nA simulator \\(m\\) that provides closed-form solutions is often preferable for gradient-based methods because of the ease of differentiating symbolic expressions. This, however, often means that a lower-fidelity model of the physics is used.\nA solver \\(s\\) is usually selected for its ability to resolve non-linear coupling. A differentiation of the solver algorithm is not needed; only the derivative at the solution of the solver is needed, which is obtained using implicit differentiation.\n\nA robust and widely adopted method for calculating gradients in numerical code is differentiable programming, where automatic differentiation is commonly used.\nStarting with the PDE of a physical process, many frameworks can be used. If the system includes only one discipline, a relevant simulation or PDE code can be used on its own. If there are multiple disciplines, then either a joint discretization of that PDE (e.g., using FEM) is needed, or a way to couple them together if such a joint discretization is complicated or unavailable. Commercial finite element frameworks (like COMSOL Multiphysics) are robust for many coupled physics problems, such as aero-structural interactions.\nHowever, when there is a need to couple a diverse set of numerical codes—such as a boundary element method or an explicit equation coupled with other disciplines—such unified frameworks are limited. A framework where a heterogeneous set of solvers can be used in a plug-and-play style is highly desirable. This also avoids the need for new discretizations of the coupled problem if the system model has additional subsystems or if the fidelity of a simulation changes. This post advocates to adopt this modular architecture approach where any \\(s \\in \\mathcal{S}\\) can be easily used.\n\n\n\nMultiple fields independently concluded that gradient-based methods scale well and utilized adjoint-based optimization. Backpropagation, as discussed by LeCun et al., shows the connection between optimal control and neural networks and how backpropagating errors scales the training of neural nets.\nDesign optimization in complex engineering systems, from neural networks to physical structures, encounters two principal challenges:\n\nLarge Number of Design Variables: These systems involve numerous “knobs” to tune—such as weights and biases in neural networks or geometric and material properties in physical systems.\nHigh Computational Cost: The computation required to evaluate these systems often lacks scalability, creating a bottleneck.\n\n\n\n\nNeural Networks: The core computation involves evaluating affine transformations followed by nonlinear activation functions. These operations must be performed billions of times during training. The sheer volume of operations makes scaling these systems challenging, despite the simplicity of individual computations.\nPhysical Systems: Optimizing systems like airplanes or offshore wind turbines introduces a different complexity. These designs involve thousands of variables, each influencing coupled physics simulations (CFD, structural mechanics, etc.). Each simulation is computationally expensive, making the design process resource-intensive.\n\nTo overcome these challenges, reviewing the literature from both fields reveals that adjoint-based methods are widely utilized. However, each discipline has optimized gradient computation to suit its specific tasks. In machine learning, computational graphs are a common framework for implementing backpropagation using dynamic programming and the chain rule. In MDO, the same objective is achieved by solving a linear system, where backpropagation can be viewed as a special case that employs linear solvers to solve that system efficiently. The work of LeCun, Hwang, and Martins and others has helped unify these approaches, showing how various methods like automatic differentiation (AD) and adjoint methods can be derived from a single cohesive formulation by viewing any system as a non-linear system and utilizing the implicit function theorem.\nIn this post, I discussed how two different fields, machine learning and MDO, have converged on the same approach to scale the system optimization using gradients."
  },
  {
    "objectID": "posts/gradient-based-optimization/index.html#multidisciplinary-design-optimization-architecture",
    "href": "posts/gradient-based-optimization/index.html#multidisciplinary-design-optimization-architecture",
    "title": "Gradient-Based Optimization for Large Systems",
    "section": "",
    "text": "A computational architecture for Multidisciplinary Design Optimization (MDO) is composed of three primary components: solvers (e.g., Newton), simulators (or emulators, PDE solvers, closed-form expressions), and optimizers (e.g., IPOPT, Genetic Algorithm). The performance and efficiency of the overall system are directly influenced by the selection and interaction of these components.\nSimulators and solvers are required to either compute the performance of the system through some physics (numerical simulation) or resolve non-linear feedback coupling between subsystems (non-linear equation solvers). A system where all the subsystems agree on their input and output (including any shared variables) is necessary for the system to be optimal and feasible. The coordination of the variables can, however, be done in numerous ways that involve solvers and/or optimizers. Many architectures that arise due to these choices are briefly discussed in later sections.\nFor offshore systems, marine hydrodynamics solvers (like the boundary element method) are required. The choice of solvers, however, depends on the strength of the coupling between two subsystems. In this post, a Newton solver is used to converge the feedback coupling when necessary.\n\n\nThe MDO system can be represented as a set:\n\\[F:\\{\\mathcal{O}, \\mathcal{M}, \\mathcal{S}\\}\\]\nwhere \\(\\mathcal{M}\\) is the set of simulators, \\(\\mathcal{O}\\) is the choice of optimizer, and \\(\\mathcal{S}\\) is the set of solvers.\nThe performance \\(\\mathcal{P}(\\mathcal{F})\\) depends on:\n\nThe compatibility of \\(\\mathcal{M}\\) and \\(\\mathcal{S}\\) with \\(\\mathcal{O}\\).\nThe computational efficiency of \\(\\mathcal{F}\\), defined by the time \\(T(\\mathcal{F})\\) and accuracy \\(A(\\mathcal{F})\\).\nThe convergence of the optimization problem.\n\nGradient-based optimizers (\\(\\mathcal{O}_{\\nabla}\\)) achieve superior performance (\\(\\mathcal{P}(\\mathcal{F}_{\\nabla}) &gt; \\mathcal{P}(\\mathcal{F}_{\\neg \\nabla})\\)) when \\(\\mathcal{M}\\) and \\(\\mathcal{S}\\) are differentiable. However, the practical challenges of computing gradients for certain simulators and solvers remain a significant limitation.\n\n\n\nLet \\(\\mathcal{F}\\) represent the multidisciplinary optimization problem, where each problem \\(p \\in \\mathcal{F}\\) is defined by a set of variables (design, shared, target), constraints (including consistency constraints), and objectives (one or many). The optimizer is a function \\(\\mathcal{O}: \\mathcal{F} \\to \\mathcal{R}\\), where \\(\\mathcal{R}\\) is the space of feasible solutions.\nOptimizers commonly used in MDO problems can be broadly categorized into:\n\nGradient-Based Optimizers (\\(\\mathcal{O}_{\\nabla}\\)): These optimizers leverage the gradient \\(\\nabla f\\) of the objective function \\(f\\) to iteratively find a minimum. The preference for gradient-based methods arises from their superior convergence speed when gradients are available and computationally inexpensive. However, obtaining gradients can be challenging:\n\nCertain simulator software \\(S: \\mathcal{X} \\to \\mathcal{Y}\\), where \\(\\mathcal{X}\\) is the input space and \\(\\mathcal{Y}\\) is the output space, may not inherently provide differentiable mappings.\nNumerical approximations such as finite differences (\\(\\nabla f \\approx \\frac{\\Delta f}{\\Delta x}\\)) may introduce errors and computational overhead when differentiating this class of simulators.\n\nGradient-Free Optimizers (\\(\\mathcal{O}_{\\neg \\nabla}\\)): These include evolutionary algorithms and heuristic methods that do not require gradient information. Evolutionary strategies are stochastic and derivative-free. While easier to use and robust for non-differentiable problems (think black-box type problems), they often lack the efficiency of \\(\\mathcal{O}_{\\nabla}\\) for high-dimensional spaces.\n\n\n\n\n\\(\\mathcal{S}\\) is the set of solvers and \\(\\mathcal{M}\\) is the set of simulators needed for the MDO problems. The choices \\(s \\in \\mathcal{S}\\) and \\(m \\in \\mathcal{M}\\) affect the feasibility and convergence of the optimization problem. For instance:\n\nA simulator \\(m\\) that provides closed-form solutions is often preferable for gradient-based methods because of the ease of differentiating symbolic expressions. This, however, often means that a lower-fidelity model of the physics is used.\nA solver \\(s\\) is usually selected for its ability to resolve non-linear coupling. A differentiation of the solver algorithm is not needed; only the derivative at the solution of the solver is needed, which is obtained using implicit differentiation.\n\nA robust and widely adopted method for calculating gradients in numerical code is differentiable programming, where automatic differentiation is commonly used.\nStarting with the PDE of a physical process, many frameworks can be used. If the system includes only one discipline, a relevant simulation or PDE code can be used on its own. If there are multiple disciplines, then either a joint discretization of that PDE (e.g., using FEM) is needed, or a way to couple them together if such a joint discretization is complicated or unavailable. Commercial finite element frameworks (like COMSOL Multiphysics) are robust for many coupled physics problems, such as aero-structural interactions.\nHowever, when there is a need to couple a diverse set of numerical codes—such as a boundary element method or an explicit equation coupled with other disciplines—such unified frameworks are limited. A framework where a heterogeneous set of solvers can be used in a plug-and-play style is highly desirable. This also avoids the need for new discretizations of the coupled problem if the system model has additional subsystems or if the fidelity of a simulation changes. This post advocates to adopt this modular architecture approach where any \\(s \\in \\mathcal{S}\\) can be easily used.\n\n\n\nMultiple fields independently concluded that gradient-based methods scale well and utilized adjoint-based optimization. Backpropagation, as discussed by LeCun et al., shows the connection between optimal control and neural networks and how backpropagating errors scales the training of neural nets.\nDesign optimization in complex engineering systems, from neural networks to physical structures, encounters two principal challenges:\n\nLarge Number of Design Variables: These systems involve numerous “knobs” to tune—such as weights and biases in neural networks or geometric and material properties in physical systems.\nHigh Computational Cost: The computation required to evaluate these systems often lacks scalability, creating a bottleneck.\n\n\n\n\nNeural Networks: The core computation involves evaluating affine transformations followed by nonlinear activation functions. These operations must be performed billions of times during training. The sheer volume of operations makes scaling these systems challenging, despite the simplicity of individual computations.\nPhysical Systems: Optimizing systems like airplanes or offshore wind turbines introduces a different complexity. These designs involve thousands of variables, each influencing coupled physics simulations (CFD, structural mechanics, etc.). Each simulation is computationally expensive, making the design process resource-intensive.\n\nTo overcome these challenges, reviewing the literature from both fields reveals that adjoint-based methods are widely utilized. However, each discipline has optimized gradient computation to suit its specific tasks. In machine learning, computational graphs are a common framework for implementing backpropagation using dynamic programming and the chain rule. In MDO, the same objective is achieved by solving a linear system, where backpropagation can be viewed as a special case that employs linear solvers to solve that system efficiently. The work of LeCun, Hwang, and Martins and others has helped unify these approaches, showing how various methods like automatic differentiation (AD) and adjoint methods can be derived from a single cohesive formulation by viewing any system as a non-linear system and utilizing the implicit function theorem.\nIn this post, I discussed how two different fields, machine learning and MDO, have converged on the same approach to scale the system optimization using gradients."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Order By\n      Default\n      \n      \n      \n        Funder\n      \n      \n        Team\n      \n      \n        Description\n      \n      \n        Start\n      \n      \n        End\n      \n      \n        Funding\n      \n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n \n\n\n\nTitle\n\n\n\nTeam\n\n\n\nFunder\n\n\n\nDescription\n\n\n\nFunding\n\n\n\nStart\n\n\n\nEnd\n\n\n\n\n\n\n\n\n\n\n\n \n\n\nKapil Khanal, Dr. Maha Haji, Dr. Carlos , Dr. Mattheiu\n\n\nSandia National Laboratories\n\n\nSeedling I and II: A Framework for Differentiable Hydrodynamics\n\n\n$200,000\n\n\n2023 - Present\n\n\nPresent\n\n\n\n\n\n\n\n\n\nAWS Cloud Credit for Research\n\n\nKapil Khanal\n\n\nAmazon Web Services (AWS)\n\n\nAmazon Web Services (AWS) Cloud Credit for Computaitonal Research\n\n\n$5,000\n\n\n2023\n\n\n2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "publications.html#publications-and-conference-papers",
    "href": "publications.html#publications-and-conference-papers",
    "title": "Publications",
    "section": "Publications and Conference Papers",
    "text": "Publications and Conference Papers\nKhanal, K., Michelén Ströfer, C. A., Ancellin, M., & Haji, M. (2024). Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis of Wave-Structure Interactions. Applied Ocean Research, Submitted.\nKhanal, K., & Haji, M. N. (2024). Multi-Objective Multidisciplinary Optimization of Wave Energy Converter Array Layout and Controls. https://dx.doi.org/10.2139/ssrn.4891821\nMcCabe, R., Khanal, K., & Haji, M. (2024). Open-source toolbox for semi-analytical hydrodynamic coefficients via the matched eigenfunction expansion method. UMERC Conference, August 7, Duluth, Minnesota.\nKhanal, K., & Haji, M. N. (2022, October 25). Multidisciplinary Design Optimization for Novel Offshore Systems. Presentation at the openMDAO Workshop, NASA Glenn Research Center, Cleveland, Ohio.\nKhanal, K., McCabe, R., & Haji, M. N. (2023). Gradient-Based Design Optimization of Concentric Cylindrical Offshore Structures. Proceedings of the SIAM Conference on Optimization (OP23), May 31, Seattle, Washington.\nKhanal, K., Vitale, O., DeGoede, N., & Haji, M. (2023, October 4-6). Multi-objective Multidisciplinary Optimization of Wave Energy Converter Array Configurations and Controls. University Marine Energy Research Community 2023 Conference, Durham, NH, USA."
  },
  {
    "objectID": "people.html",
    "href": "people.html",
    "title": "People",
    "section": "",
    "text": "PhD Candidate\n\n\n\n\n\n\n\n\n\n\n\n\n\nPI\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "people.html#team",
    "href": "people.html#team",
    "title": "People",
    "section": "",
    "text": "PhD Candidate\n\n\n\n\n\n\n\n\n\n\n\n\n\nPI\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "people.html#alumni",
    "href": "people.html#alumni",
    "title": "People",
    "section": "Alumni",
    "text": "Alumni\n\n\n   \n    \n    \n      Order By\n      Default\n      \n      \n      \n        Name\n      \n      \n        Role\n      \n      \n        Started\n      \n      \n        Ended\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n \n\n\n\nName\n\n\n\nRole\n\n\n\nStarted\n\n\n\nEnded\n\n\n\n\n\n\n\n\n\n\n\nKapil\n\n\nPhD Candidate\n\n\n2021\n\n\n*\n\n\n\n\n\n\n\n\n\nPI Name\n\n\nPI\n\n\n \n\n\n \n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/aiaa-scitech-2026-submission/index.html",
    "href": "posts/aiaa-scitech-2026-submission/index.html",
    "title": "Coupled Multidisciplinary Multiobjective Systems: Searching for Similarly Performing System Designs",
    "section": "",
    "text": "2026 AIAA SciTech Forum\n12–16 January 2026\nHyatt Regency Orlando\nOrlando, Florida"
  },
  {
    "objectID": "posts/aiaa-scitech-2026-submission/index.html#conference-information",
    "href": "posts/aiaa-scitech-2026-submission/index.html#conference-information",
    "title": "Coupled Multidisciplinary Multiobjective Systems: Searching for Similarly Performing System Designs",
    "section": "",
    "text": "2026 AIAA SciTech Forum\n12–16 January 2026\nHyatt Regency Orlando\nOrlando, Florida"
  },
  {
    "objectID": "posts/aiaa-scitech-2026-submission/index.html#abstract",
    "href": "posts/aiaa-scitech-2026-submission/index.html#abstract",
    "title": "Coupled Multidisciplinary Multiobjective Systems: Searching for Similarly Performing System Designs",
    "section": "Abstract",
    "text": "Abstract\nIn many practical settings, mathematically optimal system designs are often set aside in favor of similarly performing alternatives that better accommodate real-world constraints and evolving requirements. In such cases, it is desirable to identify alternative design vectors that maintain acceptable levels of system performance. This can be achieved using isoperformance method, which construct sets of performance-invariant solutions, or through multiobjective optimization. However, traditional isoperformance approaches typically ignore the feasibility constraints that arise in coupled systems governed by multidisciplinary analysis (MDA). These systems require convergence of nonlinear solvers, and the resulting computational burden increases when newly generated designs do not satisfy such feasibility inherently. Isoperformance analysis is an inverse design technique used to identify a set of feasible design vectors that yield a specified vector of system performance metrics. This performance-invariant set provides a space for subsequent decision-making based on secondary criteria like cost, risk, or implementation ease. However, applying isoperformance methods to complex coupled systems is challenging, as these systems often require a multidisciplinary analysis (MDA) to resolve interdependencies among components. The resulting nonlinear solver demands increase computational cost when infeasible designs are evaluated.\nIn this paper, we propose two contributions to improve the robustness and scalability of isoperformance methods in such settings. First, we extend the isoperformance method to support arbitrarily large design spaces using reverse-mode automatic differentiation and adjoint sensitivity analysis. Second, we introduce a regularized isoperformance approach that incorporates the feasibility constraints arising from MDA directly into the Jacobian, improving the likelihood of convergence and solution quality. We demonstrate the method on a benchmark coupled problem involving three objectives, showcasing its ability to generate feasible isoperformant designs. decision-making in complex engineered systems requires balancing conflicting objectives among various subsystems and stakeholders. In many cases, a numerically optimal solution is not the final adopted design due to constraints, trade-offs, or the infeasibility of implementation. This motivates the search for alternative design solutions that achieve target performance levels without requiring complete re-optimization.\nTo address this, we enhance the isoperformance approach to explicitly consider MDA feasibility during inverse design. This is critical for large systems where convergence, sensitivity, and robustness all play significant roles in engineering decision-making."
  },
  {
    "objectID": "posts/aiaa-scitech-2026-submission/index.html#authors",
    "href": "posts/aiaa-scitech-2026-submission/index.html#authors",
    "title": "Coupled Multidisciplinary Multiobjective Systems: Searching for Similarly Performing System Designs",
    "section": "Authors",
    "text": "Authors\n\nKapil Khanal (PhD Candidate, Systems Engineering)\nMaha N. Haji (Assistant Professor, Sibley School of Mechanical Engineering)\n\nAffiliation: Cornell University, Ithaca, NY"
  },
  {
    "objectID": "posts/aiaa-scitech-2026-submission/index.html#research-context",
    "href": "posts/aiaa-scitech-2026-submission/index.html#research-context",
    "title": "Coupled Multidisciplinary Multiobjective Systems: Searching for Similarly Performing System Designs",
    "section": "Research Context",
    "text": "Research Context\nThis work addresses a fundamental challenge in multidisciplinary design optimization (MDO): the gap between mathematically optimal solutions and practically implementable designs. While optimization algorithms can find the “best” solution according to mathematical criteria, real-world engineering often requires flexibility in design choices to accommodate:\n\nManufacturing constraints\nSupply chain limitations\n\nRegulatory requirements\nFuture design modifications\nRisk mitigation strategies\n\nThe isoperformance method offers a systematic approach to explore the design space for alternatives that maintain acceptable performance levels while providing the flexibility needed for practical implementation."
  },
  {
    "objectID": "posts/aiaa-scitech-2026-submission/index.html#key-contributions",
    "href": "posts/aiaa-scitech-2026-submission/index.html#key-contributions",
    "title": "Coupled Multidisciplinary Multiobjective Systems: Searching for Similarly Performing System Designs",
    "section": "Key Contributions",
    "text": "Key Contributions\n\n1. Scalable Isoperformance with Automatic Differentiation\nTraditional isoperformance methods often struggle with high-dimensional design spaces due to computational limitations in gradient computation. Our approach leverages:\n\nReverse-mode automatic differentiation for efficient gradient computation\nAdjoint sensitivity analysis to handle complex coupled systems\nComputational graph frameworks for scalable implementation\n\nThis enables the method to scale to arbitrarily large design spaces while maintaining computational efficiency.\n\n\n2. Regularized Isoperformance for Coupled Systems\nCoupled multidisciplinary systems introduce unique challenges through:\n\nNonlinear coupling constraints between disciplines\nFeasibility requirements that must be satisfied simultaneously\nConvergence dependencies of numerical solvers\n\nOur regularized approach incorporates these feasibility constraints directly into the Jacobian matrix, improving both convergence likelihood and solution quality."
  },
  {
    "objectID": "posts/aiaa-scitech-2026-submission/index.html#applications",
    "href": "posts/aiaa-scitech-2026-submission/index.html#applications",
    "title": "Coupled Multidisciplinary Multiobjective Systems: Searching for Similarly Performing System Designs",
    "section": "Applications",
    "text": "Applications\nThis work has broad applications across engineering disciplines, including:\n\nAerospace Systems: Aircraft design with multiple performance objectives\nMarine Engineering: Offshore structure optimization under environmental constraints\nEnergy Systems: Renewable energy device design and optimization\nTransportation: Vehicle design balancing performance, efficiency, and safety"
  },
  {
    "objectID": "posts/aiaa-scitech-2026-submission/index.html#future-work",
    "href": "posts/aiaa-scitech-2026-submission/index.html#future-work",
    "title": "Coupled Multidisciplinary Multiobjective Systems: Searching for Similarly Performing System Designs",
    "section": "Future Work",
    "text": "Future Work\nFuture research directions include:\n\nExtension to dynamic systems and time-varying constraints\nIntegration with uncertainty quantification methods\nDevelopment of interactive visualization tools for design space exploration\nApplication to real-world engineering case studies\n\n\nThis work represents a significant step forward in making optimization methods more practical and accessible for complex engineering systems, bridging the gap between mathematical optimality and engineering feasibility."
  },
  {
    "objectID": "posts/marinehydro-julia-package/index.html",
    "href": "posts/marinehydro-julia-package/index.html",
    "title": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis",
    "section": "",
    "text": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis of Wave-Structure Interactions\nThis work presents a novel implementation of a fully differentiable boundary element solver for marine hydrodynamics, enabling efficient gradient-based optimization of offshore structures and wave energy converters."
  },
  {
    "objectID": "posts/marinehydro-julia-package/index.html#research-overview",
    "href": "posts/marinehydro-julia-package/index.html#research-overview",
    "title": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis",
    "section": "",
    "text": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis of Wave-Structure Interactions\nThis work presents a novel implementation of a fully differentiable boundary element solver for marine hydrodynamics, enabling efficient gradient-based optimization of offshore structures and wave energy converters."
  },
  {
    "objectID": "posts/marinehydro-julia-package/index.html#authors",
    "href": "posts/marinehydro-julia-package/index.html#authors",
    "title": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis",
    "section": "Authors",
    "text": "Authors\n\nKapil Khanal (Cornell University & (partly developed while interning at) Sandia National Laboratories)\nCarlos A. Michelén Ströfer (Sandia National Laboratories)\nMatthieu Ancellin (Eurobios Mews Labs)\nMaha Haji (Cornell University)"
  },
  {
    "objectID": "posts/marinehydro-julia-package/index.html#research-highlights",
    "href": "posts/marinehydro-julia-package/index.html#research-highlights",
    "title": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis",
    "section": "🌟 Research Highlights",
    "text": "🌟 Research Highlights\n\n📚 Derivation and discussion of the discrete adjoint method for the boundary integral equations\n💻 Review and implementation of a differentiable boundary element solver for marine hydrodynamics in Julia\n🌊 Exact gradient calculation for a pair of floating hemispheres with respect to their dimensions, separation distance, and wave environment\n⚡ Mechanical power optimization for a pair of wave energy converters using exact gradients"
  },
  {
    "objectID": "posts/marinehydro-julia-package/index.html#about-marinehydro.jl",
    "href": "posts/marinehydro-julia-package/index.html#about-marinehydro.jl",
    "title": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis",
    "section": "About MarineHydro.jl",
    "text": "About MarineHydro.jl\nMarineHydro.jl is a fully-differentiable boundary element solver for marine hydrodynamics. This new solver implements both direct and indirect boundary element formulations and uses two Green’s function expressions: Wu et al., and Delhommeau’s, varying in their accuracy and speed.\n\nKey Features\n\nDual Formulation Support: Implements both direct and indirect boundary element formulations\nMultiple Green’s Functions: Supports Wu et al. and Delhommeau’s Green’s function expressions\nAutomatic Differentiation: Fully differentiable with respect to geometry and wave parameters\nJulia Implementation: High-performance implementation in Julia for computational efficiency\nOpen Source: MIT licensed and available on GitHub"
  },
  {
    "objectID": "posts/marinehydro-julia-package/index.html#technical-implementation",
    "href": "posts/marinehydro-julia-package/index.html#technical-implementation",
    "title": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis",
    "section": "Technical Implementation",
    "text": "Technical Implementation\n\nBoundary Element Method\nThe boundary element method (BEM) is particularly well-suited for wave-structure interaction problems because it:\n\nReduces the problem dimensionality by one (surface instead of volume discretization)\nNaturally handles infinite domains without artificial boundary conditions\n\n\n\nDifferentiability Framework\nThe key innovation in this work is the implementation of automatic differentiation throughout the boundary element solver:\nusing MarineHydro\nusing Zygote\n\n# Calculate radiation forces with automatic differentiation\nA_w_grad, = Zygote.gradient(w -&gt; calculate_radiation_forces(mesh, ζ, w)[1], ω)\nThis enables: - Exact gradients without finite difference approximations for the hydrodynamic forces - Efficient optimization of complex geometries - Sensitivity analysis for design parameters\n\n\nAdjoint Method Implementation\nThe discrete adjoint method is derived and implemented for the boundary integral equations, providing:\n\nComputational efficiency for gradient calculations\nScalability to large-scale problems\nIntegration with modern optimization frameworks"
  },
  {
    "objectID": "posts/marinehydro-julia-package/index.html#applications",
    "href": "posts/marinehydro-julia-package/index.html#applications",
    "title": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis",
    "section": "Applications",
    "text": "Applications\n\nWave Energy Converters\nThe package demonstrates mechanical power optimization for wave energy converters:\n\nMulti-body interactions: Analysis of arrays of floating bodies\nPower optimization: Maximizing energy extraction efficiency\nGeometric sensitivity: Understanding how shape affects performance\n\n\n\nOffshore Structures\nApplications extend to various offshore structures:\n\nFloating platforms: Oil and gas platforms, wind turbines\nMarine vessels: Ships, submarines, underwater vehicles\nCoastal structures: Breakwaters, harbors, piers"
  },
  {
    "objectID": "posts/marinehydro-julia-package/index.html#code-repository",
    "href": "posts/marinehydro-julia-package/index.html#code-repository",
    "title": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis",
    "section": "Code Repository",
    "text": "Code Repository\nThe complete implementation is available at: https://github.com/symbiotic-engineering/MarineHydro.jl\n\nRepository Structure\n\n📁 .github/workflows: Continuous integration and automated testing\n📊 paper: Plots and data generated for the research paper\n📜 src: Source code for the MarineHydro.jl package\n🧪 test: Comprehensive test suite and validation cases\n\n\n\nGetting Started\n# Clone the repository\ngit clone https://github.com/symbiotic-engineering/MarineHydro.jl.git\ncd MarineHydro.jl\n\n# Install dependencies\nusing Pkg\nPkg.activate(\".\")\nPkg.instantiate()\n\n\nBasic Usage Example\nusing MarineHydro\nusing PyCall\n\n# Import Capytaine mesh\ncpt = pyimport(\"capytaine\")\nradius = 1.0\nresolution = (10, 10)\ncptmesh = cpt.mesh_sphere(name=\"sphere\", radius=radius, center=(0, 0, 0), resolution=resolution)\ncptmesh.keep_immersed_part(inplace=true)\n\n# Convert to Julia mesh\nmesh = Mesh(cptmesh)\n\n# Calculate diffraction forces\nω = 1.03\nζ = [0, 0, 1]  # HEAVE motion\nF = DiffractionForce(mesh, ω, ζ)\n\n# Calculate radiation forces\nA, B = calculate_radiation_forces(mesh, ζ, ω)"
  },
  {
    "objectID": "posts/marinehydro-julia-package/index.html#research-impact",
    "href": "posts/marinehydro-julia-package/index.html#research-impact",
    "title": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis",
    "section": "Research Impact",
    "text": "Research Impact\nThis work addresses several critical challenges in marine hydrodynamics:\n\nComputational Efficiency: Automatic differentiation eliminates the need for expensive finite difference calculations\nDesign Optimization: Enables gradient-based optimization of complex marine structures\nMulti-physics Integration: Provides a foundation for coupling with structural and control systems\nOpen Source Accessibility: Makes advanced hydrodynamic analysis tools available to the research community"
  },
  {
    "objectID": "posts/marinehydro-julia-package/index.html#future-developments",
    "href": "posts/marinehydro-julia-package/index.html#future-developments",
    "title": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis",
    "section": "Future Developments",
    "text": "Future Developments\nThe package is actively developed with plans for:\n\nEnhanced API: More user-friendly interface for complex problems\nPerformance Optimization: Further improvements in computational efficiency\nExtended Functionality: Support for additional wave theories and boundary conditions\nDocumentation: Comprehensive tutorials and examples"
  },
  {
    "objectID": "posts/marinehydro-julia-package/index.html#related-publications",
    "href": "posts/marinehydro-julia-package/index.html#related-publications",
    "title": "MarineHydro.jl: A Fully Differentiable Boundary Element Solver for Hydrodynamic Sensitivity Analysis",
    "section": "Related Publications",
    "text": "Related Publications\nThis work is part of a broader research effort in differentiable programming for engineering applications. The implementation builds on recent advances in:\n\nAutomatic differentiation frameworks\nBoundary element method theory\nMarine hydrodynamics modeling\nOptimization algorithms\n\n\nMarineHydro.jl represents a significant step forward in making advanced hydrodynamic analysis accessible for design optimization, enabling researchers and engineers to efficiently explore the design space for marine structures and wave energy devices."
  },
  {
    "objectID": "posts/evtol-ems-system-architecture/index.html",
    "href": "posts/evtol-ems-system-architecture/index.html",
    "title": "eVTOL Integration in Emergency Medical Services: A System Architecture Approach",
    "section": "",
    "text": "We propose to architect a system that integrates eVTOLs in emergency medical services to ensure affordability, performance, and equity. The technical, operational, and regulatory requirements of the EMS services are fundamentally different and stringent from the air-taxi requirements, thus a design of system architecture is important. The successful integration of the air ambulance in the city emergency services will save countless lives by reducing the response time and safe transportation."
  },
  {
    "objectID": "posts/evtol-ems-system-architecture/index.html#project-overview",
    "href": "posts/evtol-ems-system-architecture/index.html#project-overview",
    "title": "eVTOL Integration in Emergency Medical Services: A System Architecture Approach",
    "section": "",
    "text": "We propose to architect a system that integrates eVTOLs in emergency medical services to ensure affordability, performance, and equity. The technical, operational, and regulatory requirements of the EMS services are fundamentally different and stringent from the air-taxi requirements, thus a design of system architecture is important. The successful integration of the air ambulance in the city emergency services will save countless lives by reducing the response time and safe transportation."
  },
  {
    "objectID": "posts/evtol-ems-system-architecture/index.html#project-scope",
    "href": "posts/evtol-ems-system-architecture/index.html#project-scope",
    "title": "eVTOL Integration in Emergency Medical Services: A System Architecture Approach",
    "section": "Project Scope",
    "text": "Project Scope\nThe scope of the project is to successfully realize an integrated system of air transport for emergency medical services. It will develop models and methods necessary to deploy emergency services using the appropriate air vehicle in the urban environment. We will simulate the operational and design decisions to enumerate the architectures.\nThe main function of this system is transporting (process) a patient (operand) or providing immediate medical attention (process) to the hospital (operand). Our goal is to provide insight for all the stakeholders about the promise and potential of eVTOL-based emergency services and propose several reference architectures."
  },
  {
    "objectID": "posts/evtol-ems-system-architecture/index.html#system-architecture-poster",
    "href": "posts/evtol-ems-system-architecture/index.html#system-architecture-poster",
    "title": "eVTOL Integration in Emergency Medical Services: A System Architecture Approach",
    "section": "System Architecture Poster",
    "text": "System Architecture Poster\n\n\n\n\n\n\nSystem Architecture Poster\n\n\n\nThe following poster presents our comprehensive system architecture for integrating eVTOLs into emergency medical services:\n\n\n\n\n\n\n\n\n\n\n\n\nAlternative Viewing Options\n\n\n\n\nFull Screen: Open poster in new tab\nDownload: Download PDF file"
  },
  {
    "objectID": "posts/evtol-ems-system-architecture/index.html#key-research-areas",
    "href": "posts/evtol-ems-system-architecture/index.html#key-research-areas",
    "title": "eVTOL Integration in Emergency Medical Services: A System Architecture Approach",
    "section": "Key Research Areas",
    "text": "Key Research Areas\n\n1. System Architecture Design\n\nMulti-stakeholder Analysis: Understanding the needs of patients, healthcare providers, emergency responders, and regulatory bodies\nOperational Modeling: Developing simulation frameworks for emergency response scenarios\nInfrastructure Planning: Designing vertiport networks and medical facility integration\n\n\n\n2. Technical Requirements\n\nVehicle Specifications: eVTOL design requirements for medical transport\nSafety Standards: Regulatory compliance and certification pathways\nPerformance Metrics: Response time optimization and reliability requirements\n\n\n\n3. Operational Considerations\n\nDispatch Algorithms: Intelligent routing and resource allocation\nMedical Integration: Coordination with existing emergency medical systems\nCost-Benefit Analysis: Economic feasibility and sustainability models\n\n\n\n4. Equity and Accessibility\n\nGeographic Coverage: Ensuring service availability across diverse urban areas\nAffordability Models: Making emergency air transport accessible to all communities\nRegulatory Framework: Policy recommendations for equitable service delivery"
  },
  {
    "objectID": "posts/evtol-ems-system-architecture/index.html#research-methodology",
    "href": "posts/evtol-ems-system-architecture/index.html#research-methodology",
    "title": "eVTOL Integration in Emergency Medical Services: A System Architecture Approach",
    "section": "Research Methodology",
    "text": "Research Methodology\nOur approach combines several analytical frameworks:\n\nSystems Engineering: Structured approach to complex system design\nOperations Research: Mathematical modeling of emergency response networks\nStakeholder Analysis: Understanding diverse requirements and constraints\nSimulation Modeling: Virtual testing of system architectures and operational scenarios"
  },
  {
    "objectID": "posts/evtol-ems-system-architecture/index.html#expected-outcomes",
    "href": "posts/evtol-ems-system-architecture/index.html#expected-outcomes",
    "title": "eVTOL Integration in Emergency Medical Services: A System Architecture Approach",
    "section": "Expected Outcomes",
    "text": "Expected Outcomes\nThis research will deliver:\n\nReference Architectures: Multiple system design options for eVTOL EMS integration\nPerformance Models: Quantitative analysis of response times and service quality\nImplementation Roadmap: Step-by-step guidance for system deployment\nPolicy Recommendations: Regulatory and operational guidelines for stakeholders"
  },
  {
    "objectID": "posts/evtol-ems-system-architecture/index.html#impact-and-significance",
    "href": "posts/evtol-ems-system-architecture/index.html#impact-and-significance",
    "title": "eVTOL Integration in Emergency Medical Services: A System Architecture Approach",
    "section": "Impact and Significance",
    "text": "Impact and Significance\nThe integration of eVTOLs into emergency medical services has the potential to:\n\nReduce Response Times: Faster emergency response in urban and rural areas\nImprove Patient Outcomes: Quicker access to specialized medical care\nEnhance System Efficiency: Better resource utilization and coordination\nPromote Equity: Extend high-quality emergency care to underserved communities"
  },
  {
    "objectID": "posts/evtol-ems-system-architecture/index.html#future-work",
    "href": "posts/evtol-ems-system-architecture/index.html#future-work",
    "title": "eVTOL Integration in Emergency Medical Services: A System Architecture Approach",
    "section": "Future Work",
    "text": "Future Work\nBuilding on this system architecture study, future research directions include:\n\nPilot Program Design: Implementation of small-scale demonstration projects\nTechnology Development: Advancement of eVTOL capabilities for medical applications\nPartnership Development: Collaboration with healthcare providers and regulatory agencies\nEconomic Analysis: Detailed cost-benefit studies for different deployment scenarios\n\n\nThis work represents a comprehensive approach to integrating emerging air mobility technologies with critical healthcare infrastructure, with the ultimate goal of improving emergency medical services for all communities."
  },
  {
    "objectID": "posts/evtol-ems-system-architecture/index.html#related-publications",
    "href": "posts/evtol-ems-system-architecture/index.html#related-publications",
    "title": "eVTOL Integration in Emergency Medical Services: A System Architecture Approach",
    "section": "Related Publications",
    "text": "Related Publications\nThis research builds on and contributes to the broader field of urban air mobility and emergency services integration. For more information about related work in this area, please refer to the publications section of this website."
  },
  {
    "objectID": "posts/xg-pass-soccer-analytics/index.html",
    "href": "posts/xg-pass-soccer-analytics/index.html",
    "title": "Giving Passes Due Credit: A Data-Driven Framework to Calculate Expected Goals Per Pass (xG/pass)",
    "section": "",
    "text": "This is a project I did for my summer undergraduate experience in statistics at Carnegie Mellon University. This project can be extended to create a dynamic network model of the game if you’re interested in that and I am open to collaborate on that especially if you’re a undergraduate researcher."
  },
  {
    "objectID": "posts/xg-pass-soccer-analytics/index.html#abstract",
    "href": "posts/xg-pass-soccer-analytics/index.html#abstract",
    "title": "Giving Passes Due Credit: A Data-Driven Framework to Calculate Expected Goals Per Pass (xG/pass)",
    "section": "Abstract",
    "text": "Abstract\nFinding the value of a pass is a holy grail of soccer analytics. While Expected Goals (xG) is a ubiquitous metric for measuring the quality of a shot, it primarily rewards the player taking the shot, often overlooking the crucial build-up play. Soccer is a collaborative game, and the passes leading to a shot are often as important as the shot itself. To create a more complete picture, we need to give passes their due credit.\nThis paper proposes a data-driven framework to calculate an “Expected Goal per Pass” (xG/pass) value, distributing the credit for a scoring opportunity across all players involved in the passing sequence.\nKeywords: xG per pass, credit assignment, data driven, soccer analytics"
  },
  {
    "objectID": "posts/xg-pass-soccer-analytics/index.html#introduction",
    "href": "posts/xg-pass-soccer-analytics/index.html#introduction",
    "title": "Giving Passes Due Credit: A Data-Driven Framework to Calculate Expected Goals Per Pass (xG/pass)",
    "section": "Introduction",
    "text": "Introduction\nA pass in soccer can be evaluated in terms of its risk and reward. In this paper, we propose a data-driven methodology to assign an Expected Goal (xG) value to each pass made by a player. The framework considers the quality of the pass, the collaboration within the team, and the spatial context of where the pass was made on the pitch.\n\n\n\nLet’s kick it\n\n\nVarious methods have been proposed to solve this credit assignment problem. One common approach is to simply attribute a fraction of the final shot’s xG to players who assisted. However, this method often fails to account for the quality of the individual passes and tends to over-reward forward players who are closer to the final action. Our framework aims to provide a more nuanced distribution of credit."
  },
  {
    "objectID": "posts/xg-pass-soccer-analytics/index.html#dataset-statsbomb-event-data",
    "href": "posts/xg-pass-soccer-analytics/index.html#dataset-statsbomb-event-data",
    "title": "Giving Passes Due Credit: A Data-Driven Framework to Calculate Expected Goals Per Pass (xG/pass)",
    "section": "Dataset: StatsBomb Event Data",
    "text": "Dataset: StatsBomb Event Data\nWe used event data from StatsBomb’s open data resources. This dataset logs every event in a match, including timestamps, player actions, and locations. We focused our analysis on “pass chains”—sequences of passes within a single team’s possession.\nA pass chain can originate anywhere on the field and may or may not end in a shot. When a chain does end in a shot, the entire sequence inherits the xG value of that shot.\n\n\n\n\n\n\nPlaceholder for Figure 1: Pass Chain Example\n\n\n\n\n\n\nPass Chain Example"
  },
  {
    "objectID": "posts/xg-pass-soccer-analytics/index.html#methods-for-distributing-xg",
    "href": "posts/xg-pass-soccer-analytics/index.html#methods-for-distributing-xg",
    "title": "Giving Passes Due Credit: A Data-Driven Framework to Calculate Expected Goals Per Pass (xG/pass)",
    "section": "Methods for Distributing xG",
    "text": "Methods for Distributing xG\nWe explored several statistical methods to model the value of each pass within a chain.\n\n1. Grid-Based Model\nThe most intuitive approach is to divide the pitch into a grid and calculate the average xG of all pass chains originating from each grid cell. This value is then assigned to any pass starting in that cell. We used cross-validation to determine the optimal grid size.\nWhile simple, this model assumes all passes from a given area are equal, which ignores individual pass quality and player skill.\n\n\n2. Generalized Additive Model (GAM)\nTo capture the non-linear relationship between pass location and its value, we used a Generalized Additive Model (GAM). This model provides a smooth estimate of xG across the entire pitch based on the precise starting coordinates of a pass.\n\n\n\n\n\n\nPlaceholder for Figure 3: GAM Smooth Estimates\n\n\n\n\n\n\nGAM Smooth Estimates\n\n\n\n\n\n\n3. Random Forest Model\nFinally, we built a Random Forest model to incorporate a richer set of features beyond just location. These features included: - Pass Length and Duration: How far and how quickly the ball traveled. - Network Metrics: We constructed a passing network for each team to measure player influence. Metrics like PageRank and Betweenness Centrality were calculated for each player (node) in the network.\nThe model, built with 500 trees, prioritized pass location and the PageRank of the receiving player, indicating that high-value passes are those made near the opponent’s goal to influential players.\n\n\n\n\n\n\nPlaceholder for Figure 4 & 5: Network and Feature Importance\n\n\n\n\n\n\nNetwork and Feature Importance"
  },
  {
    "objectID": "posts/xg-pass-soccer-analytics/index.html#model-comparison",
    "href": "posts/xg-pass-soccer-analytics/index.html#model-comparison",
    "title": "Giving Passes Due Credit: A Data-Driven Framework to Calculate Expected Goals Per Pass (xG/pass)",
    "section": "Model Comparison",
    "text": "Model Comparison\nWe compared the models using Mean Squared Error (MSE) on a 70/30 train-test split. The Random Forest model performed the best, confirming the presence of non-linear relationships in the data.\n\n\n\nModel\nMSE\n\n\n\n\nGrid-Based Model\n0.043\n\n\nGeneralized Additive Model\n0.0034\n\n\nRandom Forest Model\n0.0024"
  },
  {
    "objectID": "posts/xg-pass-soccer-analytics/index.html#creating-the-final-xg-per-pass-metric",
    "href": "posts/xg-pass-soccer-analytics/index.html#creating-the-final-xg-per-pass-metric",
    "title": "Giving Passes Due Credit: A Data-Driven Framework to Calculate Expected Goals Per Pass (xG/pass)",
    "section": "Creating the Final xG per Pass Metric",
    "text": "Creating the Final xG per Pass Metric\nUsing the predictions from our Random Forest model, we re-normalized the values within each pass chain to create the final metric. The formula is:\n\\[\n\\textit{xG per pass}_{i} = \\frac{f(\\text{pass}_i)}{\\sum_{j=1}^{n}f(\\text{pass}_{j})} \\times \\textit{xG from shot}\n\\]\nwhere \\(f(\\text{pass}_i)\\) is the predicted value for pass i from the model, and n is the total number of passes in the chain."
  },
  {
    "objectID": "posts/xg-pass-soccer-analytics/index.html#conclusion-and-future-work",
    "href": "posts/xg-pass-soccer-analytics/index.html#conclusion-and-future-work",
    "title": "Giving Passes Due Credit: A Data-Driven Framework to Calculate Expected Goals Per Pass (xG/pass)",
    "section": "Conclusion and Future Work",
    "text": "Conclusion and Future Work\nThis framework provides a quantitative method to credit players for their contribution to creating scoring chances. It rewards passes made closer to the opponent’s goal and those made to influential teammates. This metric can be used to rank players based on their creative passing ability.\nFor future work, we plan to incorporate team tactics, the positions of nearby players, and a method to penalize “bad” passes that result in a loss of possession.\n\nCode for Analysis\nThe code for this project is available on GitHub: https://github.com/KapilKhanal/Soccer_CMUCamp\n\n\nAcknowledgements\nI would like to thank Dr. Kostas Pelechrinis of the University of Pittsburgh for helping with the project and Dr. Tisha Hooks of Winona State University for reviewing the paper. This paper is a continuation of the work I did for my summer undergraduate experience in statistics at Carnegie Mellon University."
  },
  {
    "objectID": "posts/neural-networks-bem/index.html",
    "href": "posts/neural-networks-bem/index.html",
    "title": "Enhancing the Boundary Element Method with Scientific Machine Learning",
    "section": "",
    "text": "The Boundary Element Method (BEM) is a cornerstone of computational hydrodynamics, widely used to solve the three-dimensional diffraction-radiation problem for floating bodies. BEM involves transforming a partial differential equation (PDE) into a boundary integral equation using Green’s theorem, which is then solved numerically. A key challenge in BEM is the numerical evaluation of the Green’s function, particularly its wave-related terms. These computations typically scale poorly, often at \\(O(N^3)\\) with the number of panels (\\(N\\)), creating a significant bottleneck. This is especially problematic in large-scale optimization tasks for offshore structures, which involve many panels and design parameters.\nThis creates a classic trade-off: accuracy vs. efficiency. We propose adding a third dimension to this trade-off: the ease of numerical differentiation. While surrogate models and semi-analytical methods exist, we introduce a hybrid approach that leverages a physics-informed neural network (PINN) to enhance the traditional BEM program."
  },
  {
    "objectID": "posts/neural-networks-bem/index.html#introduction",
    "href": "posts/neural-networks-bem/index.html#introduction",
    "title": "Enhancing the Boundary Element Method with Scientific Machine Learning",
    "section": "",
    "text": "The Boundary Element Method (BEM) is a cornerstone of computational hydrodynamics, widely used to solve the three-dimensional diffraction-radiation problem for floating bodies. BEM involves transforming a partial differential equation (PDE) into a boundary integral equation using Green’s theorem, which is then solved numerically. A key challenge in BEM is the numerical evaluation of the Green’s function, particularly its wave-related terms. These computations typically scale poorly, often at \\(O(N^3)\\) with the number of panels (\\(N\\)), creating a significant bottleneck. This is especially problematic in large-scale optimization tasks for offshore structures, which involve many panels and design parameters.\nThis creates a classic trade-off: accuracy vs. efficiency. We propose adding a third dimension to this trade-off: the ease of numerical differentiation. While surrogate models and semi-analytical methods exist, we introduce a hybrid approach that leverages a physics-informed neural network (PINN) to enhance the traditional BEM program."
  },
  {
    "objectID": "posts/neural-networks-bem/index.html#neural-networks-in-scientific-machine-learning",
    "href": "posts/neural-networks-bem/index.html#neural-networks-in-scientific-machine-learning",
    "title": "Enhancing the Boundary Element Method with Scientific Machine Learning",
    "section": "Neural Networks in Scientific Machine Learning",
    "text": "Neural Networks in Scientific Machine Learning\nThe classical expression of the free surface Greens function.\\(G(P,Q) = \\text{fundamental solution} + \\textit{harmonic function}\\) : \\[\\begin{equation}\nG(P,Q) = \\left(\\frac{1}{X^2+ (Z_1-Z_2)^2}\\right) + \\left( \\frac{1}{X^2+ Y^2} + F(X,Y)\n+ 2 \\pi ik_0 e^{-Y} J_0(X)\\right)  \n\\end{equation}\\] where horizontal (X) and vertical distances (Y), \\ \\(X:k_0 *\\sqrt{x1-x2)^2  + (y1-y2)^2}\\) and \\(Y:-k_o(z1+z2)\\) Newman simplified \\(F(X,Y)\\) from the original expression (not included here) which has many computational challenges to: \\[\\begin{equation}\nF(X, Y) = -2e^{-y} \\int_{0}^{Y} \\frac{e^t}{\\sqrt{X^2 + t^2}} \\, dt - \\pi e^{-y} \\left[B(X) + H(X)\\right]\n\\end{equation}\\]\nQ: Can we instead use a neural network to approximate the Green’s function?\nNeural networks have a growing history in scientific machine learning, with recent publications demonstrating their power in hydrodynamics . However, a well-known challenge is that standard neural networks often struggle to learn periodic and oscillatory functions, which are fundamental to wave physics.\nSeveral research avenues have explored solutions to this, including: - Transforming data into the Fourier space. - Developing novel activation functions. - Using deeper network architectures.\nWe’re exploring the use of neural networks to approximate the Green’s function and integrate it into our in-house BEM solver - MarineHydro.jl.\nThis is a work in progress.\n\n\n\n\nReferences\n\nJohn, F. (1950). On the motion of floating bodies II. Communications on Pure and Applied Mathematics.\nXie, M., et al. (2018). A review of Green’s functions for marine hydrodynamics. Journal of Hydrodynamics.\nHuang, G., et al. (2022). Deep-learning-based fast-prediction method for hydrodynamic performance of a ship sailing in waves. Ocean Engineering.\nZhan, S., et al. (2023). A review of deep learning in naval architecture and ocean engineering. Ocean Engineering.\nBoulle, N., et al. (2020). Rational neural networks. arXiv preprint."
  },
  {
    "objectID": "posts/neural-networks-bem/index.html#model-architecture",
    "href": "posts/neural-networks-bem/index.html#model-architecture",
    "title": "Enhancing the Boundary Element Method with Physics-Informed Neural Networks",
    "section": "Model Architecture",
    "text": "Model Architecture\nWe use a fully connected neural network with a [2, 30, 30, 30, 30, 30, 30, 30, 1] architecture (input, hidden layers, output). While deeper networks can improve generalization, they also increase inference time, creating a trade-off between model performance and speed.\n\n\n\nNeural Network Architecture\n\n\nTo better capture the oscillatory nature of the problem, we adopt two specialized activation functions: 1. Trainable Rational Activation Function: Used for most hidden layers. 2. Oscillatory Activation Function: \\(x + \\sin^2(x)\\), used for the final hidden layer.\nComputational experiments suggest this combination yields the best performance. The rational activation function is defined as:\n\\[\nF(x) = \\frac{\\sum_{i=0}^{r_p}a_i x^i}{\\sum_{j=0}^{r_q}b_j x^j}, \\quad a_{r_p} \\neq 0, b_{r_q} \\neq 0\n\\]\nThis neural network-based global approximation aims to be as fast as older, less accurate methods (like Wu et al.’s approximation) while being as accurate as more modern, computationally intensive ones (like Newman’s derivation), all while generalizing well to domains outside the training data."
  },
  {
    "objectID": "posts/neural-networks-bem/index.html#loss-function-a-physics-informed-approach",
    "href": "posts/neural-networks-bem/index.html#loss-function-a-physics-informed-approach",
    "title": "Enhancing the Boundary Element Method with Physics-Informed Neural Networks",
    "section": "Loss Function: A Physics-Informed Approach",
    "text": "Loss Function: A Physics-Informed Approach\nA key to successfully training a network on a physical problem is to inform it about the underlying physics. Since the terms of the Green’s function satisfy the Laplace equation, we can build this constraint directly into the loss function. Specifically, we enforce the following condition:\n\\[\n\\nabla^2 F = \\frac{1}{X} \\frac{\\partial F}{\\partial X}  + \\frac{\\partial^2 F}{\\partial Y^2} + \\frac{\\partial^2 F}{\\partial X^2} = 0\n\\]\nOur loss function penalizes not only incorrect predicted values but also incorrect gradients. We use automatic differentiation to compute the gradients of the network’s output with respect to its inputs (\\(\\nabla_X \\hat{NN}, \\nabla_Y \\hat{NN}\\)) and include a term in the loss that pushes these gradients to satisfy the Laplace equation. This ensures the model learns solutions that are not just accurate but also physically consistent.\n\n\nReferences\n\nJohn, F. (1950). On the motion of floating bodies II. Communications on Pure and Applied Mathematics.\nXie, M., et al. (2018). A review of Green’s functions for marine hydrodynamics. Journal of Hydrodynamics.\nHuang, G., et al. (2022). Deep-learning-based fast-prediction method for hydrodynamic performance of a ship sailing in waves. Ocean Engineering.\nZhan, S., et al. (2023). A review of deep learning in naval architecture and ocean engineering. Ocean Engineering.\nBoulle, N., et al. (2020). Rational neural networks. arXiv preprint."
  },
  {
    "objectID": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html",
    "href": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html",
    "title": "Derivatives are Cheap and Expensive",
    "section": "",
    "text": "“In machine learning, derivatives are cheap. In design optimization, they can be very expensive. Why?”"
  },
  {
    "objectID": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#introduction",
    "href": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#introduction",
    "title": "Derivatives are Cheap and Expensive",
    "section": "Introduction",
    "text": "Introduction\nGradient-based optimization methods are everywhere, and they are the secret sauce behind intelligent software systems like ChatGPT to the optimal design of physical systems such as satellites, rockets, and airplanes. Very few people know the parallels between these two systems and how the engineering decision making is similar. This post reviews the methodologies for computing gradients in complex systems, drawing on insights from both machine learning and engineering literature.\nGradients are essential for sensitivity calculations and optimization of objective (loss) functions. But while gradients are cheap for neural network training, they are often expensive for PDEs and coupled simulations in physical system design."
  },
  {
    "objectID": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#why-are-gradients-cheap-for-neural-networks",
    "href": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#why-are-gradients-cheap-for-neural-networks",
    "title": "Derivatives are Cheap and Expensive",
    "section": "Why Are Gradients Cheap for Neural Networks?",
    "text": "Why Are Gradients Cheap for Neural Networks?\n\nNeural networks are composed of simple, differentiable operations (dot products, matrix multiplications, simple activation functions).\nAutomatic differentiation (AD) frameworks (e.g., PyTorch, TensorFlow) efficiently apply the chain rule via backpropagation.\nThe computational graph can be traversed efficiently, making gradient computation nearly as fast as the forward pass.\nAnalytical gradients are available for many neural network layers so your AD framework gets to cheat and use them."
  },
  {
    "objectID": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#why-are-gradients-expensive-for-physical-systems",
    "href": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#why-are-gradients-expensive-for-physical-systems",
    "title": "Derivatives are Cheap and Expensive",
    "section": "Why Are Gradients Expensive for Physical Systems?",
    "text": "Why Are Gradients Expensive for Physical Systems?\n\nPhysical systems often involve PDEs, legacy code, or black-box simulations.\nSimulations may be modular, with neural networks chained to empirical calculations, surrogate models, and numerical solvers.\nGradients may require finite differences (expensive and noisy), symbolic methods (rarely feasible), or custom adjoint/automatic differentiation implementations.\nCoupled systems (e.g., multidisciplinary design optimization) require careful management of data flow and execution order.\nAdhoc heterogenous assembly of components and simulations."
  },
  {
    "objectID": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#methods-for-gradient-computation",
    "href": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#methods-for-gradient-computation",
    "title": "Derivatives are Cheap and Expensive",
    "section": "Methods for Gradient Computation",
    "text": "Methods for Gradient Computation\n\nFinite Differences: Simple but expensive and prone to numerical error.\nSymbolic Differentiation: Exact but rarely practical for complex or legacy code.\nAutomatic Differentiation: Powerful, but requires code to be written in a compatible way.\nAdjoint/Linear System Methods: Set up a global sensitivity equation and solve a linear system—especially useful when the chain rule is unwieldy.\n\n\n\n\n\n\n\n\n\nMethod\nPros\nCons\n\n\n\n\nFinite Differences\nEasy to implement\nExpensive, noisy, scales poorly\n\n\nSymbolic\nExact\nImpractical for large/legacy code\n\n\nAutomatic Diff (AD)\nEfficient, general\nNeeds compatible code, memory usage\n\n\nAdjoint/Linear System\nScales for many inputs\nComplex to implement, setup required"
  },
  {
    "objectID": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#modular-systems-mixing-and-matching",
    "href": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#modular-systems-mixing-and-matching",
    "title": "Derivatives are Cheap and Expensive",
    "section": "Modular Systems: Mixing and Matching",
    "text": "Modular Systems: Mixing and Matching\nIn real-world modeling, systems are often modular: a neural network, an empirical formula, and a numerical simulation may be chained together. The chain rule applies, but the optimal way to compute derivatives may not be a simple sequential application. A different interpretation of the chain rule is needed. Additionally, in complex multidisciplinary systems, managing the execution order and data flow for derivatives is non-trivial. Frameworks like OpenMDAO use graph algorithms (e.g., NetworkX) to determine the correct order and avoid unnecessary computations so that forward and adjoint computation is scalable.\n\nMost automatic differentiation techniques, including backpropagation, can be traced back to constrained optimization and the vast literature on optimal controls. The method of Lagrange multipliers transforms constrained problems into unconstrained ones, providing the foundation for adjoint methods and modern AD frameworks."
  },
  {
    "objectID": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#forward-vs.-adjoint-backward-mode-vs-mixed-mode",
    "href": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#forward-vs.-adjoint-backward-mode-vs-mixed-mode",
    "title": "Derivatives are Cheap and Expensive",
    "section": "Forward vs. Adjoint (Backward) Mode vs Mixed Mode",
    "text": "Forward vs. Adjoint (Backward) Mode vs Mixed Mode\n\nForward mode: Efficient when there are few inputs (design variables).\nAdjoint (backward) mode: Efficient when there are few outputs (objectives/constraints).\nBoth are applications of the chain rule, but their efficiency depends on the problem structure.\nSometime mixed mode are efficient combining forward and adjoint mode. This depends on the dataflow and the structure of the system."
  },
  {
    "objectID": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#theoretical-roots-lagrange-multipliers-and-backpropagation",
    "href": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#theoretical-roots-lagrange-multipliers-and-backpropagation",
    "title": "Derivatives are Cheap and Expensive",
    "section": "Theoretical Roots: Lagrange Multipliers and Backpropagation",
    "text": "Theoretical Roots: Lagrange Multipliers and Backpropagation\nMost automatic differentiation techniques, including backpropagation, can be traced back to constrained optimization. The method of Lagrange multipliers transforms constrained problems into unconstrained ones, providing the foundation for adjoint methods and modern AD frameworks."
  },
  {
    "objectID": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#conclusion",
    "href": "posts/gradient-based-optimization/derivatives-are-cheap-and-expensive.html#conclusion",
    "title": "Derivatives are Cheap and Expensive",
    "section": "Conclusion",
    "text": "Conclusion\nAlthough gradients are necessary for scalable optimization, but their cost varies dramatically between fields. It requires understanding the structure of your system—and choosing the right differentiation method, this can make the difference between tractable and intractable optimization. As systems become more modular and complex, hybrid approaches and careful management of forward computation and adjoint derivative computation are increasingly important.\nSystem of systems are becoming more common in the design of systems such as ChatGPT, rockets, airplanes, buildings etc and the only way to scale the ‘training’/ ‘tuning’ / optimization is to use right tools to compute them gradients."
  }
]